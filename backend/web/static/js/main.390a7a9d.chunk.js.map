{"version":3,"sources":["back.svg","copy.svg","Lobby.js","JoinForm.js","CreateForm.js","Game.js","Rules.js","App.js","serviceWorker.js","index.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","d","fill","_ref3","_ref","svgRef","title","props","height","viewBox","width","ref","ForwardRef","forwardRef","id","x","y","style","enableBackground","xmlSpace","Lobby","state","players","socket","onmessage","bind","window","onbeforeunload","event","console","log","data","JSON","parse","undefined","onStart","setState","Row","player","colSpan","component","href","type","className","onClick","main","map","start","code","text","React","Component","JoinForm","name","showLobby","nameChange","codeChange","handleSubmit","value","replace","preventDefault","comp","doPost","content","store","createSocket","alert","reason","onSubmit","size","placeholder","maxLength","onChange","CreateForm","handleChange","Game","onMessage","onDisconnect","getLocalPlayer","choices","message","localPlayerName","localPlayer","args","queryString","location","search","history","push","json","shift","warn","toString","cards","filter","coins","choice","send","stringify","Player","influence","Choice","onChoice","line","numInfluence","card","withRouter","Rules","back","callback","http","XMLHttpRequest","open","setRequestHeader","onreadystatechange","readyState","status","contentType","getResponseHeader","includes","responseText","body","onopen","onclose","loc","newUri","protocol","host","endsWith","WebSocket","MainScreen","createForm","joinForm","App","mainScreen","toggleRules","pushState","pathname","searchString","info","currShowRules","showRules","Header","exact","path","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.390a7a9d.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M0 0h24v24H0z\",\n  fill: \"none\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M11.67 3.87L9.9 2.1 0 12l9.9 9.9 1.77-1.77L3.54 12z\"\n});\n\nvar SvgBack = function SvgBack(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    width: 24,\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgBack, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/back.a6a829fc.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M5.32,14.64h20.51V5.32v0h0.01c0-1.47,0.6-2.8,1.56-3.76c0.95-0.95,2.28-1.55,3.75-1.55V0h0h39.61h1.22l0.88,0.88 l31.29,31.41l0.87,2.09v69.2v0h-0.01c0,1.47-0.59,2.8-1.55,3.76h-0.01c-0.95,0.96-2.28,1.55-3.75,1.55v0.01h0H79.19v8.65v0h-0.01 c0,1.47-0.59,2.8-1.55,3.76h-0.01c-0.96,0.95-2.28,1.55-3.75,1.55v0.01h0H5.32h0v-0.01c-1.47,0-2.8-0.6-3.76-1.56 c-0.95-0.96-1.55-2.28-1.55-3.75H0v0V19.97v0h0.01c0-1.47,0.6-2.8,1.56-3.76c0.95-0.95,2.28-1.55,3.75-1.55L5.32,14.64L5.32,14.64 L5.32,14.64z M31.76,14.64h13.17h1.22l0.88,0.88l31.29,31.41l0.87,2.09v53.95h19.89V36.24H74.73h0v0c-1.78,0-3.39-0.74-4.56-1.94 c-1.17-1.19-1.9-2.84-1.9-4.65h0v0V5.94H31.76V14.64L31.76,14.64z M68.39,2.97h2.37l31.29,31.41v1.74H74.73 c-3.49,0-6.35-2.92-6.35-6.48V2.97L68.39,2.97z M73.26,50.88H48.91h0v0c-1.78,0-3.39-0.74-4.56-1.94c-1.17-1.19-1.9-2.84-1.9-4.65 h0v0V20.58H25.83H5.94v96.36h67.32v-8.04v-2.97V50.88L73.26,50.88z\"\n}));\n\nvar SvgCopy = function SvgCopy(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Layer_1\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 105.02 122.88\",\n    style: {\n      enableBackground: \"new 0 0 105.02 122.88\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgCopy, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/copy.1f7a2fb2.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\r\nimport {ReactComponent as CopyIcon} from \"./copy.svg\";\r\nimport {CopyToClipboard} from \"react-copy-to-clipboard/lib/Component\";\r\n\r\nexport default class Lobby extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {players: []}\r\n\r\n        if (props.socket) {\r\n            this.socket = props.socket;\r\n\r\n            // Register the onmessage event handler for the websocket\r\n            this.onmessage = this.onmessage.bind(this);\r\n\r\n            this.socket.onmessage = this.onmessage;\r\n            window.onbeforeunload = () => true; // block refreshes\r\n        }\r\n    }\r\n\r\n    onmessage(event) {\r\n        // When we receive a message from the server, it's either a lobby update or a start message\r\n        console.log(event.data);\r\n        let data = JSON.parse(event.data);\r\n        if (data === \"Start\") {\r\n            // If it's a start message, unregister the event handler\r\n            this.socket.onmessage = undefined;\r\n            this.props.onStart(); // Render the game view\r\n        } else {\r\n            // This is a lobby update, so update the list of players in the lobby\r\n            this.setState({players: data});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        // Map a player to a row in a table to display\r\n        const Row = ({player}) => (\r\n            <tr>\r\n                <td colSpan=\"2\">{player}</td>\r\n            </tr>\r\n        );\r\n\r\n        let component = (\r\n            <div id=\"centered\">\r\n                <p>You should never see this screen! If you do, please file an issue <a href=\"https://github.com/abhaybd/Influence/issues\">here!</a></p>\r\n                <button type=\"button\" className=\"form-button\" onClick={this.props.main}>Go Back</button>\r\n            </div>\r\n        );\r\n        // If the socket exists, we're connected to the lobby. Otherwise, show an error message.\r\n        if (this.socket) {\r\n            component = (\r\n                <div id=\"centered\">\r\n                    <table>\r\n                        <tbody>\r\n                        {this.state.players.map((player, i) => (<Row player={player} key={i}/>))}\r\n                        <tr>\r\n                            <td colSpan=\"2\">\r\n                                <button type=\"button\" className=\"form-button\" onClick={this.props.start}>\r\n                                    Start\r\n                                </button>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                Code: <span id=\"lobby-code\">{this.props.code}</span>\r\n                            </td>\r\n                            <td>\r\n                                <CopyToClipboard text={this.props.code}>\r\n                                    <button id=\"copy-button\">\r\n                                        <CopyIcon/>\r\n                                    </button>\r\n                                </CopyToClipboard>\r\n                            </td>\r\n                        </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return component;\r\n    }\r\n}","import React from \"react\";\r\nimport {createSocket, doPost} from \"./App\";\r\nimport {ReactComponent as BackIcon} from \"./back.svg\";\r\nimport Lobby from \"./Lobby\";\r\n\r\n//Join Game\r\nclass JoinForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {name: \"\", code: \"\", showLobby: false};\r\n\r\n        this.nameChange = this.nameChange.bind(this);\r\n        this.codeChange = this.codeChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    nameChange(event) {\r\n        // Only letters allowed, so replace invalid characters with an empty string\r\n        this.setState({name: event.target.value.replace(/[^A-Za-z]/g, \"\")});\r\n    }\r\n\r\n    codeChange(event) {\r\n        this.setState({code: event.target.value});\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault(); // override default behavior\r\n        let name = this.state.name;\r\n        let code = this.state.code;\r\n        let props = this.props;\r\n        // Only submit the create request if there is a valid name and code\r\n        if (code.length > 0 && name.length > 0) {\r\n            let comp = this;\r\n\r\n            // Use an info request to check if the supplied lobby exists\r\n            doPost({type: \"exists\", code: code}, function (data) {\r\n                if (data.content === true) {\r\n                    // If the lobby exists, check if there is already a player in that lobby\r\n                    doPost({type: \"playerInLobby\", code: code, content: name}, function (data) {\r\n                        if (data.content === false) {\r\n                            // If no such player already exists, store the code and name\r\n                            // This isn't fool proof. A player may join with this name between this POST request and the WS connection.\r\n                            // This site should handle it gracefully.\r\n                            props.store.code = code;\r\n                            props.store.name = name;\r\n                            props.store.socket = createSocket(name, code,\r\n                                function (event) {\r\n                                    comp.setState({showLobby: true}); // render the lobby within this component\r\n                                },\r\n                                function (event) {\r\n                                    // Show the error and go back to the join screen\r\n                                    comp.setState({showLobby: false, name: \"\"});\r\n                                    alert(\"Error: \" + event.reason);\r\n                                }\r\n                            );\r\n                        } else {\r\n                            alert(\"That name is already taken! Please choose another!\");\r\n                        }\r\n                    });\r\n                } else {\r\n                    alert(\"Invalid room code!\"); // Tell the player that the lobby doesn't exist\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.showLobby) {\r\n            return <Lobby socket={this.props.store.socket} start={this.props.start} onStart={this.props.onStart}\r\n                          code={this.props.store.code} main={this.props.main}/>\r\n        }\r\n        return (\r\n            <form onSubmit={this.handleSubmit}>\r\n                <table className=\"form-table\">\r\n                    <tbody>\r\n                    <tr>\r\n                        <td>\r\n                            <button id=\"back\" type=\"button\" onClick={this.props.main}><BackIcon/></button>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\r\n                            <div id=\"create-name\">What's your name, traveler?</div>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\r\n                            <input type=\"text\" value={this.state.name} size='10' placeholder=\"Altaïr\" maxLength='12'\r\n                                   onChange={this.nameChange}/>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\r\n                            <div id=\"create-code\">Enter Access Code</div>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\r\n                            <input type=\"text\" value={this.state.code} size='10' placeholder=\"end-line-game\"\r\n                                   onChange={this.codeChange}/>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td colSpan='2'>\r\n                            <input type=\"submit\" value=\"Join Lobby\"/>\r\n                        </td>\r\n                    </tr>\r\n                    </tbody>\r\n                </table>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default JoinForm;\r\n","import React from \"react\";\r\nimport {ReactComponent as BackIcon} from './back.svg';\r\nimport {createSocket, doPost} from \"./App\";\r\nimport Lobby from \"./Lobby\";\r\n\r\n//create Game\r\nclass CreateForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {name: '', showLobby: false};\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        // Only letters allowed, so replace invalid characters with an empty string\r\n        this.setState({name: event.target.value.replace(/[^A-Za-z]/g, \"\")});\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault(); // override default behavior\r\n        // Only submit the create request if there is a valid name\r\n        if (this.state.name.length > 0) {\r\n            this.props.store.name = this.state.name; // Store the player name for use in a later component\r\n            let props = this.props;\r\n            let comp = this;\r\n\r\n            // Use an action request to create a new lobby\r\n            doPost({type: \"create\"}, function (data) {\r\n                console.log(data);\r\n                props.store.code = data.content;\r\n                props.store.socket = createSocket(props.store.name, props.store.code,\r\n                    function (event) {\r\n                        comp.setState({showLobby: true}); // render the lobby within this component\r\n                    },\r\n                    function (event) {\r\n                        // Show the error and go back to the create screen\r\n                        alert(\"Error: \" + event.reason);\r\n                        comp.setState({showLobby: false});\r\n                    }\r\n                );\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.showLobby) {\r\n            return <Lobby socket={this.props.store.socket} start={this.props.start} onStart={this.props.onStart}\r\n                          code={this.props.store.code} main={this.props.main}/>\r\n        }\r\n        return (\r\n            <form onSubmit={this.handleSubmit}>\r\n                <table className=\"form-table\">\r\n                    <tbody>\r\n                    <tr>\r\n                        <td>\r\n                            <button id=\"back\" type=\"button\" onClick={this.props.main}><BackIcon/></button>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\r\n                            <div id=\"create-name\">What's your name, traveler?</div>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\r\n                            <input type=\"text\" value={this.state.name} size='10' placeholder=\"Aguilar\" maxLength=\"12\"\r\n                                   onChange={this.handleChange}/>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td colSpan='2'>\r\n                            <input type=\"submit\" value=\"Create Lobby\"/>\r\n                        </td>\r\n                    </tr>\r\n                    </tbody>\r\n                </table>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CreateForm;\r\n","import React from \"react\";\r\nimport {createSocket} from \"./App\";\r\nimport queryString from \"query-string\";\r\nimport {withRouter} from \"react-router\";\r\n\r\n//game\r\nclass Game extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onMessage = this.onMessage.bind(this);\r\n        this.onDisconnect = this.onDisconnect.bind(this);\r\n        this.getLocalPlayer = this.getLocalPlayer.bind(this);\r\n\r\n        this.state = {players: props.players ?? [], choices: [], message: \"\", log: [\"Started game!\"]}\r\n\r\n        window.onbeforeunload = () => true; // block refreshes\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"Game mounted!\");\r\n        if (this.props.socket) {\r\n            this.socket = this.props.socket;\r\n            this.localPlayerName = this.props.localPlayer;\r\n        } else {\r\n            let args = queryString.parse(this.props.location.search);\r\n            this.socket = createSocket(args.name, args.code, this.onDisconnect);\r\n            this.localPlayerName = args.name;\r\n        }\r\n\r\n        // Register the onmessage event handler for the websocket\r\n        this.socket.onmessage = this.onMessage;\r\n    }\r\n\r\n    onDisconnect(event) {\r\n        alert(\"Unexpected disconnection from server! Error: \" + event.reason);\r\n        this.props.history.push(\"/\");\r\n    }\r\n\r\n    onMessage(event) {\r\n        let json = event.data;\r\n        let data = JSON.parse(json);\r\n        // We've received a message from the server, so follow the instruction\r\n        switch (data.type) {\r\n            case \"update\":\r\n                // This is an update message, so update the player information\r\n                this.setState({players: data.content})\r\n                break;\r\n\r\n            case \"info\":\r\n                // This is an info message, so alert the player with the info\r\n                alert(data.content);\r\n                break;\r\n\r\n            case \"choice\":\r\n                // We need to prompt the player to make a choice, so display those now\r\n                this.setState({choices: data.content, message: data.message});\r\n                break;\r\n\r\n            case \"stopChoice\":\r\n                // The time for making choices has ended, so stop making a choice\r\n                // If the player wasn't already making a choice, this doesn't break anything\r\n                this.setState({choices: [], message: \"Waiting for others...\"});\r\n                break;\r\n\r\n            case \"log\":\r\n                // Push this data to the game event log\r\n                let log = this.state.log;\r\n                log.push(data.content);\r\n                // Make sure the log length never exceeds the max length\r\n                while (log.length > 5) {\r\n                    log.shift();\r\n                }\r\n                this.setState({log: log})\r\n                break;\r\n\r\n            default:\r\n                // We received an unrecognized server message\r\n                console.warn(\"Unrecognized data \" + data.toString());\r\n                break;\r\n        }\r\n    }\r\n\r\n    numInfluence(cards) {\r\n        // Count the number of non-null cards\r\n        return cards.filter(x => x !== null).length;\r\n    }\r\n\r\n    getLocalPlayer() {\r\n        // Find the player from the list of players that matches the local player's name\r\n        for (let player of this.state.players) {\r\n            if (player.name === this.localPlayerName) {\r\n                return player;\r\n            }\r\n        }\r\n        // If no such player exists, just return an empty player\r\n        return {name: \"\", cards: [], coins: 0};\r\n    }\r\n\r\n    onChoice(choice) {\r\n        // The player has made a choice, so stop displaying the choices\r\n        this.setState({choices: [], message: \"Waiting for others...\"});\r\n        this.socket.send(JSON.stringify(choice)); // Send the players choice to the server\r\n    }\r\n\r\n    render() {\r\n        // Map a player to a JSX element for displaying\r\n        const Player = ({player, influence, coins}) => (\r\n            <div className={player === this.localPlayerName ? \"local-player-icon\" : \"player-icon\"}>\r\n                {player} <br/>\r\n                Coins: {coins} <br/>\r\n                Influence: {influence}\r\n            </div>\r\n        );\r\n\r\n        // Map a choice to a JSX element for displaying\r\n        const Choice = ({choice}) => (\r\n            <button className=\"game-button\" onClick={() => this.onChoice(choice)}>\r\n                <div className=\"player-icon\">\r\n                    {choice}\r\n                </div>\r\n            </button>\r\n        );\r\n\r\n        // Render the component contents\r\n        return (\r\n            <div>\r\n                <div id=\"event-log\">\r\n                    {this.state.log.map(line => <div>{line}<br/></div>)}\r\n                </div>\r\n                <div className=\"game-container\">\r\n                    {this.state.players.map(player => <Player key={player.name} player={player.name}\r\n                                                              coins={player.coins}\r\n                                                              influence={this.numInfluence(player.cards)}/>)}\r\n                </div>\r\n                <div className=\"game-container\">\r\n                    {this.getLocalPlayer().cards.map(card => card === null ? null :\r\n                        <div className=\"card-names\">{card}</div>)}\r\n                </div>\r\n                <div className=\"game-container\">\r\n                    {this.state.message}\r\n                </div>\r\n                <div className=\"game-container\">\r\n                    {this.state.choices.map((choice, i) => <Choice key={i} choice={choice}/>)}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Game);\r\n","//Rules Dialogue 'Show Rules'\r\nimport React from \"react\";\r\nimport {ReactComponent as BackIcon} from \"./back.svg\";\r\n\r\nexport default function Rules(props) {\r\n    return (\r\n        <div id=\"rules-box\">\r\n            <button id=\"back\" onClick={props.back}><BackIcon/></button>\r\n            <h2>Rules</h2>\r\n            2-6 players <br/><br/>\r\n\r\n            On your turn, you may choose an action to play. The action you choose may or may not correspond to the\r\n            influences that you possess. For the action that you choose, other players may potentially block or\r\n            challenge it.\r\n            <br/><br/>\r\n            <b>Challenge:</b> When a player declares an action they are declaring to the rest of the players that they\r\n            have\r\n            a certain influence, and any other player can challenge it. When a player is challenged, the challenged\r\n            player must reveal the correct influence associated with their action. If they reveal the correct\r\n            influence, the challenger player will lose an influence. However, if they fail to reveal the correct\r\n            influence the challenged player will lose their incorrectly revealed influence.\r\n            <br/><br/>\r\n            <b>Block:</b> When the any of the actions \"Foreign Aid\", \"Steal\", and \"Assassinate\" are used, they can be\r\n            blocked. Once again, any player can claim to have the correct influence to block. However, blocks can\r\n            also be challenged by any player. If a block fails, the original action will take place.\r\n            <br/><br/>\r\n            If a player loses all their influences, they are out of the game. The last player standing wins!\r\n            <br/><br/>\r\n            At this time, if a player disconnects, the game must be recreated.\r\n            <br/><br/>\r\n            <h3>Influences</h3>\r\n            <u id=\"captain-color\">Captain</u><br/>\r\n            <hl id=\"captain-color\">STEAL</hl>\r\n            : Steal 2 coins from a target. Blockable by <hl id=\"captain-color\">Captain</hl> or <hl\r\n            id=\"ambassador-color\">Ambassador</hl>. Can block <hl id=\"captain-color\">STEAL</hl><br/><br/>\r\n\r\n            <u id=\"assassin-color\">Assassin</u><br/>\r\n            <hl id=\"assassin-color\">ASSASSINATE</hl>\r\n            : Pay 3 coins to choose a target to assassinate (target loses an influence). <hl\r\n            id=\"contessa-color\">Blockable by\r\n            Contessa.</hl><br/><br/>\r\n\r\n            <u id=\"duke-color\">Duke</u><br/>\r\n            <hl id=\"duke-color\">TAX</hl>\r\n            : Collect 3 coins from the treasury. Not blockable. Can block Foreign Aid.<br/><br/>\r\n\r\n            <u id=\"ambassador-color\">Ambassador</u><br/>\r\n            <hl id=\"ambassador-color\">EXCHANGE</hl>\r\n            : Draw 2 influences into your hand and pick any 2 influences to put back. Not blockable. Can\r\n            block <hl id=\"captain-color\">STEAL</hl><br/><br/>\r\n\r\n            <u id=\"contessa-color\">Contessa</u><br/>\r\n            <hl id=\"contessa-color\">BLOCK ASSASSINATION</hl>\r\n            : Can block <hl id=\"assassin-color\">assassinations</hl>. Not blockable.<br/><br/>\r\n\r\n            <h3>Other Actions</h3>\r\n            INCOME: <br/>Collect 1 coins from the treasury.<br/><br/>\r\n\r\n            FOREIGN AID: <br/>Collect 2 coins from the treasury. Blockable by <hl id=\"duke-color\">Duke</hl>.<br/><br/>\r\n\r\n            COUP: <br/>Pay 7 coins and choose a target to lose an influence. If a player starts their turn with 10\r\n            or more coins, they must Coup. Unblockable.\r\n        </div>\r\n    );\r\n}\r\n","//Main Screen - Overall Layout\r\nimport React from \"react\";\r\nimport {Switch, Route, withRouter} from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport JoinForm from \"./JoinForm\";\r\nimport CreateForm from \"./CreateForm\";\r\nimport Game from \"./Game\";\r\nimport Rules from \"./Rules\";\r\nimport queryString from \"query-string\";\r\n\r\n/**\r\n * Perform a POST request to the lobby API endpoint. This can either be an info or action request.\r\n *\r\n * @param content An object representing the content of the POST request\r\n * @param callback A callback to call once the request succeeds.\r\n */\r\nfunction doPost(content, callback) {\r\n    // Do a POST request\r\n    const http = new XMLHttpRequest();\r\n    http.open(\"POST\", \"/lobby\");\r\n    http.setRequestHeader(\"Content-Type\", \"application/json\");\r\n    http.onreadystatechange = function () {\r\n        // This signifies that the request was successful\r\n        if (http.readyState === 4 && http.status === 200) {\r\n            let contentType = http.getResponseHeader(\"Content-Type\");\r\n            console.log(contentType);\r\n            if (contentType !== null && contentType.includes(\"application/json\")) {\r\n                console.log(http.responseText);\r\n                callback(JSON.parse(http.responseText));\r\n            }\r\n        }\r\n    }\r\n\r\n    // Serialize the content and send\r\n    let body = JSON.stringify(content);\r\n    http.send(body);\r\n}\r\n\r\nfunction createSocket(name, code, onopen = null, onclose = null) {\r\n    // This assembles the websocket uri\r\n    // Essentially, change the protocol from http to ws, and direct the websocket to port 8080\r\n    let loc = window.location;\r\n    let newUri = loc.protocol === \"https:\" ? \"wss:\" : \"ws:\";\r\n    // React proxy doesn't redirect websockets, so we'll have to manually replace the port 3000 with 8080\r\n    newUri += \"//\" + loc.host.replace(\"3000\", \"8080\");\r\n    // On prod servers, the port isn't in the url but on dev servers it is. So make sure to not duplicate the port\r\n    if (!newUri.endsWith(\":8080\")) newUri += \":8080\";\r\n    newUri += \"/ws/join/\" + code + \"/\" + name;\r\n    newUri = newUri.replace(\"3000\", \"8080\");\r\n    console.log(newUri);\r\n    let socket = new WebSocket(newUri); // Open the websocket connection\r\n    socket.onopen = onopen ?? function (event) {\r\n        console.log(\"Opened!\");\r\n    };\r\n    socket.onclose = onclose ?? function (event) {\r\n        console.log(event);\r\n        alert(\"The server disconnected unexpectedly! Error: \" + event.reason);\r\n    };\r\n\r\n    return socket;\r\n}\r\n\r\nfunction MainScreen(props) {\r\n    // This defines the main screen, with the buttons to either join or create a lobby\r\n    return (\r\n        <table className=\"buttons\">\r\n            <tbody>\r\n            <tr>\r\n                <td>\r\n                    <button type=\"button\" className=\"form-button\" onClick={props.createForm}>Create Game</button>\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td>\r\n                    <button type=\"button\" className=\"form-button\" onClick={props.joinForm}>Join Game</button>\r\n                </td>\r\n            </tr>\r\n            </tbody>\r\n        </table>\r\n    );\r\n}\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        // This is where child components can store the info they get (the player name, lobby code, etc)\r\n        this.store = {};\r\n\r\n        // Bind methods to this instance\r\n        this.createForm = this.createForm.bind(this);\r\n        this.joinForm = this.joinForm.bind(this);\r\n        this.mainScreen = this.mainScreen.bind(this);\r\n        this.start = this.start.bind(this);\r\n        this.onStart = this.onStart.bind(this);\r\n        this.toggleRules = this.toggleRules.bind(this);\r\n        this.pushState = this.pushState.bind(this);\r\n    }\r\n\r\n    pushState(pathname, state = {}, search = {}) {\r\n        let searchString = \"?\" + queryString.stringify(search);\r\n        this.props.history.push({pathname: pathname, state: state, search: searchString});\r\n    }\r\n\r\n    createForm() {\r\n        // go to the create form\r\n        this.pushState(\"/create\");\r\n    }\r\n\r\n    joinForm() {\r\n        // go to the join form\r\n        this.pushState(\"/join\");\r\n    }\r\n\r\n    mainScreen() {\r\n        // go to the main screen\r\n        this.pushState(\"/\");\r\n    }\r\n\r\n    start() {\r\n        let code = this.store.code;\r\n        // Use an info request to determine the amount players. If there's enough, start the game\r\n        doPost({type: \"numPlayers\", code: code}, function (data) {\r\n            if (data.content >= 2) {\r\n                console.log(\"Starting!\");\r\n                // Use an action request to start the game\r\n                // Once the game starts, it'll send an event via websocket to trigger a state change, so we don't do that here\r\n                doPost({type: \"start\", code: code}, () => true);\r\n            }\r\n        });\r\n    }\r\n\r\n    onStart() {\r\n        // We're starting the game, so add the name and code to the url as parameters\r\n        // This will allow the player to reconnect if they disconnect later\r\n        let info = {name: this.store.name, code: this.store.code};\r\n        this.pushState(\"/game\", {}, info);\r\n    }\r\n\r\n    toggleRules() {\r\n        // Don't change the location, just toggle the rules state\r\n        const currShowRules = this.props.location.state?.showRules || false;\r\n        this.pushState(this.props.location.pathname, {showRules: !currShowRules});\r\n    }\r\n\r\n    render() {\r\n        const Header = () => <div id=\"header\"><h1>INFLUENCE</h1><br/>A Game of Deception</div>\r\n\r\n        const showRules = this.props.location.state?.showRules || false;\r\n\r\n        // Render the app and the content\r\n        return (\r\n            <div className=\"App\">\r\n                <header className=\"App-header\">\r\n                    {showRules ? <Rules back={this.toggleRules}/> : null}\r\n                    <div id=\"rules-button\" onClick={this.toggleRules}>\r\n                        <u>{showRules ? \"Hide\" : \"Show\"} Rules</u></div>\r\n                    <Switch>\r\n                        <Route exact path=\"/\" component={Header}/>\r\n                        <Route path=\"/create\" component={Header}/>\r\n                        <Route path=\"/join\" component={Header}/>\r\n                    </Switch>\r\n                    <Switch>\r\n                        <Route exact path=\"/\">\r\n                            <MainScreen createForm={this.createForm} joinForm={this.joinForm}/>\r\n                        </Route>\r\n                        <Route path=\"/create\">\r\n                            <CreateForm store={this.store} main={this.mainScreen} start={this.start}\r\n                                        onStart={this.onStart}/>\r\n                        </Route>\r\n                        <Route path=\"/join\">\r\n                            <JoinForm store={this.store} main={this.mainScreen} start={this.start}\r\n                                      onStart={this.onStart}/>\r\n                        </Route>\r\n                        <Route path=\"/game\">\r\n                            <Game players={[]} socket={this.store.socket} localPlayer={this.store.name}/>\r\n                        </Route>\r\n                    </Switch>\r\n                </header>\r\n                <div id=\"footer\">Made by <a href=\"https://www.github.com/abhaybd\">Abhay Deshpande</a></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(App);\r\nexport {doPost, createSocket};\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter as Router} from \"react-router-dom\";\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <Router>\r\n          <App />\r\n      </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}