{"version":3,"sources":["back.svg","JoinForm.js","CreateForm.js","Lobby.js","Game.js","Rules.js","App.js","serviceWorker.js","index.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","d","fill","_ref3","_ref","svgRef","title","props","height","viewBox","width","ref","ForwardRef","forwardRef","JoinForm","state","name","code","nameChange","bind","codeChange","handleSubmit","event","setState","value","replace","preventDefault","doPost","data","content","store","lobby","alert","onSubmit","className","id","onClick","main","type","size","onChange","colSpan","React","Component","CreateForm","handleChange","http","XMLHttpRequest","open","setRequestHeader","send","JSON","stringify","onreadystatechange","readyState","status","console","log","responseText","parse","Lobby","players","socket","onmessage","undefined","onStart","Row","player","map","start","Game","localPlayerName","localPlayer","choices","message","getLocalPlayer","window","onbeforeunload","json","push","shift","warn","toString","cards","influence","coins","choice","Player","Choice","onChoice","line","numInfluence","card","Rules","back","callback","body","Buttons","createForm","joinForm","App","view","showHeader","showRules","mainScreen","showLobby","toggleRules","loc","location","new_uri","protocol","host","endsWith","WebSocket","onopen","onclose","rules","href","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.fc49a5a2.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M0 0h24v24H0z\",\n  fill: \"none\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M11.67 3.87L9.9 2.1 0 12l9.9 9.9 1.77-1.77L3.54 12z\"\n});\n\nvar SvgBack = function SvgBack(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    width: 24,\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgBack, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/back.a6a829fc.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\r\nimport {doPost} from \"./App\";\r\nimport {ReactComponent as BackIcon} from \"./back.svg\";\r\n\r\nclass JoinForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {name: '', code: ''};\r\n\r\n        this.nameChange = this.nameChange.bind(this);\r\n        this.codeChange = this.codeChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    nameChange(event) {\r\n        this.setState({name: event.target.value.replace(/[^A-Za-z]/g, \"\")});\r\n    }\r\n\r\n    codeChange(event) {\r\n        this.setState({code: event.target.value});\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        let name = this.state.name;\r\n        let code = this.state.code;\r\n        let props = this.props;\r\n        if (code.length > 0 && name.length > 0) {\r\n            doPost(\"exists\", code, function(data) {\r\n                if (data.content) {\r\n                    props.store.code = code;\r\n                    props.store.name = name;\r\n                    props.lobby();\r\n                } else {\r\n                    alert(\"Invalid room code!\");\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit}>\r\n                <table className=\"form-table\">\r\n                    <tbody>\r\n                    <tr>\r\n                        <td>\r\n                            <button id=\"back\" onClick={this.props.main}><BackIcon /></button>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\r\n                            Name:\r\n                        </td>\r\n                        <td>\r\n                            <input type=\"text\" value={this.state.name} size='10' onChange={this.nameChange}/>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\r\n                            Code:\r\n                        </td>\r\n                        <td>\r\n                            <input type=\"text\" value={this.state.code} size='10' onChange={this.codeChange}/>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td colSpan='2'>\r\n                            <input type=\"submit\" value=\"Join Lobby\"/>\r\n                        </td>\r\n                    </tr>\r\n                    </tbody>\r\n                </table>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default JoinForm;","import React from \"react\";\r\nimport {ReactComponent as BackIcon} from './back.svg';\r\n\r\nclass CreateForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {name: ''};\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({name: event.target.value.replace(/[^A-Za-z]/g, \"\")});\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        if (this.state.name.length > 0) {\r\n            this.props.store.name = this.state.name;\r\n            const url = '/lobby';\r\n\r\n            const http = new XMLHttpRequest();\r\n            http.open(\"POST\", url);\r\n            http.setRequestHeader('Content-type', 'application/json');\r\n            http.send(JSON.stringify({type:\"create\"}));\r\n\r\n            let props = this.props;\r\n            http.onreadystatechange = function() {\r\n                if (this.readyState === 4 && this.status === 200) {\r\n                    console.log(http.responseText);\r\n                    props.store.code = JSON.parse(http.responseText).content;\r\n                    props.lobby();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit}>\r\n                <table className=\"form-table\">\r\n                    <tbody>\r\n                    <tr>\r\n                        <td>\r\n                            <button id=\"back\" onClick={this.props.main}><BackIcon /></button>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\r\n                            Name:\r\n                        </td>\r\n                        <td>\r\n                            <input type=\"text\" value={this.state.name} size='10' onChange={this.handleChange}/>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td colSpan='2'>\r\n                            <input type=\"submit\" value=\"Create Lobby\"/>\r\n                        </td>\r\n                    </tr>\r\n                    </tbody>\r\n                </table>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CreateForm;","import React from \"react\";\r\n\r\nexport default class Lobby extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {players: []}\r\n        this.socket = props.socket;\r\n\r\n        this.onmessage = this.onmessage.bind(this);\r\n\r\n        this.socket.onmessage = this.onmessage;\r\n    }\r\n\r\n    onmessage(event) {\r\n        console.log(event.data);\r\n        if (event.data === \"Start\") {\r\n            this.socket.onmessage = undefined;\r\n            this.props.onStart();\r\n        } else {\r\n            let players = JSON.parse(event.data);\r\n            this.setState({players: players});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const Row = ({player}) => (\r\n            <tr>\r\n                <td>{player}</td>\r\n            </tr>\r\n        );\r\n\r\n        return (\r\n            <div id=\"centered\">\r\n                <table>\r\n                    <tbody>\r\n                    {this.state.players.map((player, i) => (<Row player={player} key={i}/>))}\r\n                    <tr>\r\n                        <td>\r\n                            <button type=\"button\" className=\"form-button\" onClick={this.props.start}>Start\r\n                            </button>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\r\n                            Code: {this.props.code}\r\n                        </td>\r\n                    </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}","import React from \"react\";\r\n\r\nexport default class Game extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.socket = props.socket;\r\n        this.localPlayerName = props.localPlayer;\r\n        this.state = {players: props.players, choices:[], message:\"\", log:[\"Started game!\"]}\r\n\r\n        this.onmessage = this.onmessage.bind(this);\r\n        this.getLocalPlayer = this.getLocalPlayer.bind(this);\r\n\r\n        this.socket.onmessage = this.onmessage;\r\n\r\n        window.onbeforeunload = () => true; // block refreshes\r\n    }\r\n\r\n    onmessage(event) {\r\n        let json = event.data;\r\n        let data = JSON.parse(json);\r\n        switch (data.type) {\r\n            case \"update\":\r\n                this.setState({players: data.content})\r\n                break;\r\n\r\n            case \"info\":\r\n                alert(data.content);\r\n                break;\r\n\r\n            case \"choice\":\r\n                this.setState({choices:data.content, message:data.message});\r\n                break;\r\n\r\n            case \"stopChoice\":\r\n                this.setState({choices:[], message:\"Waiting for others...\"});\r\n                break;\r\n\r\n            case \"log\":\r\n                let log = this.state.log;\r\n                log.push(data.content);\r\n                while (log.length > 5) {\r\n                    log.shift();\r\n                }\r\n                this.setState({log:log})\r\n                break;\r\n\r\n            default:\r\n                console.warn(\"Unrecognized data \" + data.toString());\r\n                break;\r\n        }\r\n    }\r\n\r\n    numInfluence(cards) {\r\n        let influence = 0;\r\n        for (let card of cards) {\r\n            if (card !== null) influence++;\r\n        }\r\n        return influence;\r\n    }\r\n\r\n    getLocalPlayer() {\r\n        for (let player of this.state.players) {\r\n            if (player.name === this.localPlayerName) {\r\n                return player;\r\n            }\r\n        }\r\n        return {name:\"\", cards:[], coins:0};\r\n    }\r\n\r\n    onChoice(choice) {\r\n        this.setState({choices:[], message:\"Waiting for others...\"});\r\n        this.socket.send(JSON.stringify(choice));\r\n    }\r\n\r\n    render() {\r\n        const Player = ({player, influence, coins}) => (\r\n            <div className={player===this.localPlayerName ? \"local-player-icon\" : \"player-icon\"}>\r\n                {player} <br/>\r\n                Coins: {coins} <br/>\r\n                Influence: {influence}\r\n            </div>\r\n        );\r\n\r\n        const Choice = ({choice}) => (\r\n            <button className=\"game-button\" onClick={() => this.onChoice(choice)}>\r\n                <div className=\"player-icon\">\r\n                    {choice}\r\n                </div>\r\n            </button>\r\n        );\r\n\r\n        return (\r\n            <div>\r\n                <div id=\"event-log\">\r\n                    {this.state.log.map(line => <div>{line}<br /></div>)}\r\n                </div>\r\n                <div className=\"game-container\">\r\n                    {this.state.players.map(player => <Player key={player.name} player={player.name} coins={player.coins}\r\n                                                              influence={this.numInfluence(player.cards)}/>)}\r\n                </div>\r\n                <div className=\"game-container\">\r\n                    {this.getLocalPlayer().cards.map(card => card === null ? null : <div className=\"card-names\">{card}</div>)}\r\n                </div>\r\n                <div className=\"game-container\">\r\n                    {this.state.message}\r\n                </div>\r\n                <div className=\"game-container\">\r\n                    {this.state.choices.map((choice,i) => <Choice key={i} choice={choice} />)}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport {ReactComponent as BackIcon} from \"./back.svg\";\r\n\r\nexport default function Rules(props) {\r\n    return (\r\n        <div id=\"rules-box\">\r\n            <button id=\"back\" onClick={props.back}><BackIcon/></button>\r\n            <h2>Rules</h2>\r\n            <b>2-6 players</b> <br/><br/>\r\n\r\n            On your turn, you may choose an action to play. The action you choose may or may not correspond to the\r\n            influences that you possess. For the action that you choose, other players may potentially block or\r\n            challenge it.\r\n            <br/><br/>\r\n            Challenge: When a player declares an action they are declaring to the rest of the players that they have\r\n            a certain influence, and any other player can challenge it. When a player is challenged, the challenged\r\n            player must reveal the correct influence associated with their action. If they reveal the correct\r\n            influence, the challenger player will lose an influence. However, if they fail to reveal the correct\r\n            influence the challenged player will lose their incorrectly revealed influence.\r\n            <br/><br/>\r\n            Block: When the any of the actions \"Foreign Aid\", \"Steal\", and \"Assasinate\" are used, they can be\r\n            blocked. Once again, any player can claim to have the correct influence to block. However, blocks can\r\n            also be challenged by any player. If a block fails, the original action will take place.\r\n            <br/><br/>\r\n            If a player loses all their influences, they are out of the game. The last player standing wins!\r\n            <br/><br/>\r\n            At this time, if a player disconnects, the game must be recreated.\r\n            <br/><br/>\r\n            <h3>Influences</h3>\r\n            Captain<br/>\r\n            STEAL: Steal 2 coins from a target. Blockable by Captain or Ambassador. Can block STEAL<br/><br/>\r\n\r\n            Assassin<br/>\r\n            ASSASSINATE: Pay 3 coins to choose a target to assassinate (target loses an influence). Blockable by\r\n            Contessa.<br/><br/>\r\n\r\n            Duke<br/>\r\n            TAX: Collect 3 coins from the treasury. Not blockable. Can block Foreign Aid.<br/><br/>\r\n\r\n            Ambassador<br/>\r\n            EXCHANGE: Draw 2 influences into your hand and pick any 2 influences to put back. Not blockable. Can\r\n            block STEAL<br/><br/>\r\n\r\n            Contessa<br/>\r\n            BLOCK ASSASSINATION: Can block assassinations. Not blockable.<br/><br/>\r\n\r\n            <h3>Other Actions</h3>\r\n            INCOME: <br/>Collect 1 coins from the treasury.<br/><br/>\r\n\r\n            FOREIGN AID: <br/>Collect 2 coins from the treasury. Blockable by Duke.<br/><br/>\r\n\r\n            COUP: <br/>Pay 7 coins and choose a target to lose an influence. If a player starts their turn with 10\r\n            or more coins, they must Coup. Unblockable.\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport \"./App.css\";\r\nimport JoinForm from \"./JoinForm\";\r\nimport CreateForm from \"./CreateForm\";\r\nimport Lobby from \"./Lobby\";\r\nimport Game from \"./Game\";\r\nimport Rules from \"./Rules\";\r\n\r\nfunction doPost(type, code, callback) {\r\n    const http = new XMLHttpRequest();\r\n    http.open(\"POST\", \"/lobby\");\r\n    http.setRequestHeader(\"Content-type\", \"application/json\");\r\n    http.onreadystatechange = function () {\r\n        if (http.readyState === 4 && http.status === 200) {\r\n            callback(JSON.parse(http.responseText));\r\n        }\r\n    }\r\n\r\n    let body = JSON.stringify({type: type, code: code});\r\n    http.send(body);\r\n}\r\n\r\nfunction Buttons(props) {\r\n    return (\r\n        <table className=\"buttons\">\r\n            <tbody>\r\n            <tr>\r\n                <td>\r\n                    <button type=\"button\" className=\"form-button\" onClick={props.createForm}>Create</button>\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td>\r\n                    <button type=\"button\" className=\"form-button\" onClick={props.joinForm}>Join</button>\r\n                </td>\r\n            </tr>\r\n            </tbody>\r\n        </table>\r\n    );\r\n}\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {view: \"buttons\", showHeader: true, showRules: false}\r\n        this.store = {};\r\n\r\n        this.createForm = this.createForm.bind(this);\r\n        this.joinForm = this.joinForm.bind(this);\r\n        this.mainScreen = this.mainScreen.bind(this);\r\n        this.showLobby = this.showLobby.bind(this);\r\n        this.start = this.start.bind(this);\r\n        this.onStart = this.onStart.bind(this);\r\n        this.toggleRules = this.toggleRules.bind(this);\r\n    }\r\n\r\n    createForm() {\r\n        this.setState({view: \"create\"});\r\n    }\r\n\r\n    joinForm() {\r\n        this.setState({view: \"join\"});\r\n    }\r\n\r\n    mainScreen() {\r\n        this.setState({view: \"buttons\", showHeader: true});\r\n    }\r\n\r\n    showLobby() {\r\n        let loc = window.location;\r\n        let new_uri = loc.protocol === \"https:\" ? \"wss:\" : \"ws:\";\r\n        new_uri += \"//\" + loc.host.replace(\"3000\", \"8080\");\r\n        if (!new_uri.endsWith(\":8080\")) new_uri += \":8080\"\r\n        new_uri += \"/join/\" + this.store.code + \"/\" + this.store.name;\r\n        new_uri = new_uri.replace(\"3000\", \"8080\");\r\n        console.log(new_uri);\r\n        let socket = new WebSocket(new_uri);\r\n        socket.onopen = function (event) {\r\n            console.log(\"Opened!\");\r\n        }\r\n        socket.onclose = function (event) {\r\n            console.log(event);\r\n            alert(\"The server disconnected unexpectedly!\");\r\n        }\r\n        this.socket = socket;\r\n        this.setState({showHeader: false, view: \"lobby\"});\r\n    }\r\n\r\n    start() {\r\n        let code = this.store.code;\r\n        doPost(\"numPlayers\", code, function (data) {\r\n            if (data.content >= 2) {\r\n                console.log(\"Starting!\");\r\n                doPost(\"start\", code, () => true);\r\n            }\r\n        });\r\n    }\r\n\r\n    onStart() {\r\n        this.setState({view:\"game\"})\r\n    }\r\n\r\n    toggleRules() {\r\n        let rules = this.state.showRules;\r\n        this.setState({showRules: !rules});\r\n    }\r\n\r\n    render() {\r\n        let content;\r\n        switch (this.state.view) {\r\n            case \"buttons\":\r\n                content = <Buttons createForm={this.createForm} joinForm={this.joinForm}/>\r\n                break;\r\n            case \"create\":\r\n                content = <CreateForm store={this.store} main={this.mainScreen} lobby={this.showLobby}/>\r\n                break;\r\n            case \"join\":\r\n                content = <JoinForm store={this.store} main={this.mainScreen} lobby={this.showLobby}/>\r\n                break;\r\n            case \"lobby\":\r\n                content =\r\n                    <Lobby socket={this.socket} start={this.start} onStart={this.onStart} code={this.store.code}/>\r\n                break;\r\n            case \"game\":\r\n                content = <Game players={[]} socket={this.socket} localPlayer={this.store.name}/>\r\n                break;\r\n            default:\r\n                content = null;\r\n                console.warn(\"Invalid state!\");\r\n                break;\r\n        }\r\n        return (\r\n            <div className=\"App\">\r\n                <header className=\"App-header\">\r\n                    {this.state.showRules ? <Rules back={this.toggleRules} /> : null}\r\n                    <div id=\"rules-button\" onClick={this.toggleRules}><u>{this.state.showRules ? \"Hide\" : \"Show\"} Rules</u></div>\r\n                    {this.state.showHeader ? <h1>Influence</h1> : null}\r\n                    {content}\r\n                </header>\r\n                <div id=\"footer\"><a href=\"https://www.github.com/abhaybd\">Made by Abhay Deshpande</a></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\nexport {doPost};\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}