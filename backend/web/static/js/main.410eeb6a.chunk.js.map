{"version":3,"sources":["back.svg","JoinForm.js","CreateForm.js","Lobby.js","App.js","Game.js","serviceWorker.js","index.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","d","fill","_ref3","_ref","svgRef","title","props","height","viewBox","width","ref","ForwardRef","forwardRef","JoinForm","state","name","code","nameChange","bind","codeChange","handleSubmit","event","setState","value","replace","preventDefault","doPost","data","content","store","lobby","alert","onSubmit","className","id","onClick","main","type","size","onChange","colSpan","React","Component","CreateForm","handleChange","http","XMLHttpRequest","open","setRequestHeader","send","JSON","stringify","onreadystatechange","readyState","status","console","log","responseText","parse","Lobby","Row","player","players","map","start","socket","Game","localPlayerName","localPlayer","choices","message","onmessage","getLocalPlayer","json","push","shift","warn","cards","influence","coins","choice","Player","Choice","onChoice","line","numInfluence","card","lobbyInfo","started","callback","body","create","elem","ReactDOM","render","document","getElementById","join","onStart","loc","window","location","new_uri","protocol","host","endsWith","WebSocket","onopen","debug","onclose","Buttons","App","Boolean","hostname","match","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.410eeb6a.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M0 0h24v24H0z\",\n  fill: \"none\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M11.67 3.87L9.9 2.1 0 12l9.9 9.9 1.77-1.77L3.54 12z\"\n});\n\nvar SvgBack = function SvgBack(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    width: 24,\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgBack, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/back.a6a829fc.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\r\nimport {doPost, lobby, main} from \"./App\";\r\nimport {ReactComponent as BackIcon} from \"./back.svg\";\r\n\r\nclass JoinForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {name: '', code: ''};\r\n\r\n        this.nameChange = this.nameChange.bind(this);\r\n        this.codeChange = this.codeChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    nameChange(event) {\r\n        this.setState({name: event.target.value.replace(/[^A-Za-z]/g, \"\")});\r\n    }\r\n\r\n    codeChange(event) {\r\n        this.setState({code: event.target.value});\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        let name = this.state.name;\r\n        let code = this.state.code;\r\n        let props = this.props;\r\n        if (code.length > 0 && name.length > 0) {\r\n            doPost(\"exists\", code, function(data) {\r\n                if (data.content) {\r\n                    props.store.code = code;\r\n                    props.store.name = name;\r\n                    lobby();\r\n                } else {\r\n                    alert(\"Invalid room code!\");\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit}>\r\n                <table className=\"formtable\">\r\n                    <tbody>\r\n                    <tr>\r\n                        <td>\r\n                            <button id=\"back\"><BackIcon onClick={main}/></button>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\r\n                            Name:\r\n                        </td>\r\n                        <td>\r\n                            <input type=\"text\" value={this.state.name} size='10' onChange={this.nameChange}/>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\r\n                            Code:\r\n                        </td>\r\n                        <td>\r\n                            <input type=\"text\" value={this.state.code} size='10' onChange={this.codeChange}/>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td colSpan='2'>\r\n                            <input type=\"submit\" value=\"Join Lobby\"/>\r\n                        </td>\r\n                    </tr>\r\n                    </tbody>\r\n                </table>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default JoinForm;","import React from \"react\";\r\nimport {lobby, main} from \"./App\";\r\nimport {ReactComponent as BackIcon} from './back.svg';\r\n\r\nclass CreateForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {name: ''};\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({name: event.target.value.replace(/[^A-Za-z]/g, \"\")});\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        if (this.state.name.length > 0) {\r\n            this.props.store.name = this.state.name;\r\n            const url = '/lobby';\r\n\r\n            const http = new XMLHttpRequest();\r\n            http.open(\"POST\", url);\r\n            http.setRequestHeader('Content-type', 'application/json');\r\n            http.send(JSON.stringify({type:\"create\"}));\r\n\r\n            let props = this.props;\r\n            http.onreadystatechange = function() {\r\n                if (this.readyState === 4 && this.status === 200) {\r\n                    console.log(http.responseText);\r\n                    props.store.code = JSON.parse(http.responseText).content;\r\n                    lobby();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit}>\r\n                <table className=\"formtable\">\r\n                    <tbody>\r\n                    <tr>\r\n                        <td>\r\n                            <button id=\"back\"><BackIcon onClick={main}/></button>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\r\n                            Name:\r\n                        </td>\r\n                        <td>\r\n                            <input type=\"text\" value={this.state.name} size='10' onChange={this.handleChange}/>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td colSpan='2'>\r\n                            <input type=\"submit\" value=\"Create Lobby\"/>\r\n                        </td>\r\n                    </tr>\r\n                    </tbody>\r\n                </table>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CreateForm;","import React from \"react\";\r\n\r\nexport default function Lobby(props) {\r\n    const Row = ({player}) => (\r\n        <tr>\r\n            <td>{player}</td>\r\n        </tr>\r\n    );\r\n\r\n    console.log(props);\r\n\r\n    return (\r\n        <table>\r\n            <tbody>\r\n            {props.players.map((player, i) => (<Row player={player} key={i}/>))}\r\n            <tr>\r\n                <td>\r\n                    <button type=\"button\" className=\"form-button\" onClick={props.start}>Start</button>\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td>\r\n                    Code: {props.code}\r\n                </td>\r\n            </tr>\r\n            </tbody>\r\n        </table>\r\n    );\r\n}","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./App.css\";\r\nimport JoinForm from \"./JoinForm\";\r\nimport CreateForm from \"./CreateForm\";\r\nimport Lobby from \"./Lobby\";\r\nimport Game from \"./Game\";\r\n\r\nclass Store {\r\n    constructor(data = {}) {\r\n        Object.assign(this, data);\r\n    }\r\n}\r\n\r\nlet lobbyInfo = new Store({name: \"\", code: \"\"});\r\nlet socket;\r\nlet started = false;\r\n\r\nfunction doPost(type, code, callback) {\r\n    const http = new XMLHttpRequest();\r\n    http.open(\"POST\", \"/lobby\");\r\n    http.setRequestHeader(\"Content-type\", \"application/json\");\r\n    http.onreadystatechange = function() {\r\n        if (http.readyState === 4 && http.status === 200) {\r\n            callback(JSON.parse(http.responseText));\r\n        }\r\n    }\r\n\r\n    let body = JSON.stringify({type:type, code:code});\r\n    console.log(body)\r\n    http.send(body);\r\n}\r\n\r\nfunction create() {\r\n    const elem = <div className=\"App\">\r\n        <header className=\"App-header\">\r\n            <h1>\r\n                Influence\r\n            </h1>\r\n            <CreateForm store={lobbyInfo}/>\r\n        </header>\r\n    </div>;\r\n    ReactDOM.render(elem, document.getElementById(\"root\"));\r\n}\r\n\r\nfunction join() {\r\n    const elem = <div className=\"App\">\r\n        <header className=\"App-header\">\r\n            <h1>\r\n                Influence\r\n            </h1>\r\n            <JoinForm store={lobbyInfo}/>\r\n        </header>\r\n    </div>;\r\n    ReactDOM.render(elem, document.getElementById(\"root\"));\r\n}\r\n\r\nfunction onmessage(event) {\r\n    console.log(event.data);\r\n    if (!started) {\r\n        if (event.data === \"Start\") {\r\n            started = true;\r\n            onStart();\r\n        } else {\r\n            let players = JSON.parse(event.data);\r\n            const elem = <div className=\"App\">\r\n                <header className=\"App-header\">\r\n                    <div id=\"centered\"><Lobby players={players} code={lobbyInfo.code} start={start}/></div>\r\n\r\n                </header>\r\n            </div>;\r\n            ReactDOM.render(elem, document.getElementById(\"root\"));\r\n        }\r\n    }\r\n}\r\n\r\nfunction lobby() {\r\n    let loc = window.location;\r\n    let new_uri = loc.protocol === \"https:\" ? \"wss:\" : \"ws:\";\r\n    new_uri += \"//\" + loc.host.replace(\"3000\", \"8080\");\r\n    if (!new_uri.endsWith(\":8080\")) new_uri += \":8080\"\r\n    new_uri += \"/join/\" + lobbyInfo.code + \"/\" + lobbyInfo.name;\r\n    new_uri = new_uri.replace(\"3000\", \"8080\");\r\n    console.log(new_uri);\r\n    socket = new WebSocket(new_uri);\r\n    socket.onmessage = onmessage;\r\n    socket.onopen = function (event) {\r\n        console.debug(\"Opened!\");\r\n    }\r\n\r\n    socket.onclose = function (event) {\r\n        console.debug(event);\r\n        alert(\"The server disconnected unexpectedly!\");\r\n    }\r\n\r\n    const elem = <div className=\"App\">\r\n        <header className=\"App-header\">\r\n            <div id=\"centered\"><Lobby players={[]} code={lobbyInfo.code} start={start}/></div>\r\n\r\n        </header>\r\n    </div>;\r\n    ReactDOM.render(elem, document.getElementById(\"root\"));\r\n}\r\n\r\nfunction onStart() {\r\n    const elem = <header className=\"App-header\">\r\n        <Game socket={socket} players={[]} localPlayer={lobbyInfo.name} />\r\n    </header>\r\n    ReactDOM.render(elem, document.getElementById(\"root\"));\r\n}\r\n\r\nfunction start() {\r\n    doPost(\"numPlayers\", lobbyInfo.code, function(data) {\r\n        if (data.content >= 2) {\r\n            console.log(\"Starting!\");\r\n            doPost(\"start\", lobbyInfo.code, () => {});\r\n        }\r\n    });\r\n}\r\n\r\nfunction Buttons() {\r\n    return (\r\n        <table className=\"buttons\">\r\n            <tbody>\r\n            <tr>\r\n                <td>\r\n                    <button type=\"button\" className=\"form-button\" onClick={create}>Create</button>\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td>\r\n                    <button type=\"button\" className=\"form-button\" onClick={join}>Join</button>\r\n                </td>\r\n            </tr>\r\n            </tbody>\r\n        </table>\r\n    );\r\n}\r\n\r\nfunction main() {\r\n    const elem = <div className=\"App\">\r\n        <header className=\"App-header\">\r\n            <h1>\r\n                Influence\r\n            </h1>\r\n            <Buttons/>\r\n        </header>\r\n    </div>;\r\n    ReactDOM.render(elem, document.getElementById(\"root\"));\r\n}\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"App\">\r\n            <header className=\"App-header\">\r\n                <h1>\r\n                    Influence\r\n                </h1>\r\n                <Buttons/>\r\n            </header>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\nexport {lobby, main, doPost};\r\n","import React from \"react\";\r\n\r\nexport default class Game extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.socket = props.socket;\r\n        this.localPlayerName = props.localPlayer;\r\n        this.state = {players: props.players, choices:[], message:\"\", log:[\"Started game!\"]}\r\n\r\n        this.onmessage = this.onmessage.bind(this);\r\n        this.getLocalPlayer = this.getLocalPlayer.bind(this);\r\n\r\n        this.socket.onmessage = this.onmessage;\r\n    }\r\n\r\n    onmessage(event) {\r\n        let json = event.data;\r\n        console.log(json);\r\n        let data = JSON.parse(json);\r\n        switch (data.type) {\r\n            case \"update\":\r\n                this.setState({players: data.content})\r\n                break;\r\n\r\n            case \"info\":\r\n                alert(data.content);\r\n                break;\r\n\r\n            case \"choice\":\r\n                this.setState({choices:data.content, message:data.message});\r\n                break;\r\n\r\n            case \"stopChoice\":\r\n                this.setState({choices:[], message:\"Waiting for others...\"});\r\n                break;\r\n\r\n            case \"log\":\r\n                let log = this.state.log;\r\n                log.push(data.content);\r\n                while (log.length > 5) {\r\n                    log.shift();\r\n                }\r\n                this.setState({log:log})\r\n                break;\r\n\r\n            default:\r\n                console.warn(\"Unrecognized type \" + data.type);\r\n                break;\r\n        }\r\n    }\r\n\r\n    numInfluence(cards) {\r\n        let influence = 0;\r\n        for (let card of cards) {\r\n            if (card !== null) influence++;\r\n        }\r\n        return influence;\r\n    }\r\n\r\n    getLocalPlayer() {\r\n        for (let player of this.state.players) {\r\n            if (player.name === this.localPlayerName) {\r\n                return player;\r\n            }\r\n        }\r\n        return {name:\"\", cards:[], coins:0};\r\n    }\r\n\r\n    onChoice(choice) {\r\n        this.setState({choices:[], message:\"Waiting for others...\"});\r\n        this.socket.send(JSON.stringify(choice));\r\n    }\r\n\r\n    render() {\r\n        const Player = ({player, influence, coins}) => (\r\n            <div className={player===this.localPlayerName ? \"local-player-icon\" : \"player-icon\"}>\r\n                {player} <br/>\r\n                Coins: {coins} <br/>\r\n                Influence: {influence}\r\n            </div>\r\n        );\r\n\r\n        const Choice = ({choice}) => (\r\n            <button className=\"game-button\" onClick={() => this.onChoice(choice)}>\r\n                <div className=\"player-icon\">\r\n                    {choice}\r\n                </div>\r\n            </button>\r\n        );\r\n\r\n        return (\r\n            <div>\r\n                <div id=\"event-log\">\r\n                    {this.state.log.map(line => <div>{line}<br /></div>)}\r\n                </div>\r\n                <div className=\"game-container\">\r\n                    {this.state.players.map(player => <Player key={player.name} player={player.name} coins={player.coins}\r\n                                                              influence={this.numInfluence(player.cards)}/>)}\r\n                </div>\r\n                <div className=\"game-container\">\r\n                    {this.getLocalPlayer().cards.map(card => card === null ? null : <div className=\"card-names\">{card}</div>)}\r\n                </div>\r\n                <div className=\"game-container\">\r\n                    {this.state.message}\r\n                </div>\r\n                <div className=\"game-container\">\r\n                    {this.state.choices.map((choice,i) => <Choice key={i} choice={choice} />)}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}